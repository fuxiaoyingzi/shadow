apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//http://blog.csdn.net/liumeng123321/article/details/64443157 DSL解析gradle

android {
    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    // 	签名配置 属性1keyAlias：key的别名；属性2keyPassword:Key密码;
    // 属性3storeFile:签名用的文件;属性4storePassword:签名用的文件的密码;
    // 属性5storeType:签名用的文件类型;属性6v1SigningEnabled:是否开启JAR signature scheme v1签名;
    // 属性7v2SigningEnabled:是否开启APK Signature Scheme v2签名
    // https://raw.githubusercontent.com/mcxiaoke/packer-ng-plugin/master/compatibility.md
    signingConfigs {//配置 签名配置
        config {
            keyAlias 'shadow'
            keyPassword PASSWORD
            storeFile file('D:/apk/apk.jks')
            storePassword PASSWORD
        }
    }
    compileSdkVersion 27 //必须设置，编译的sdk版本,一般设置最新的sdk版本号
    buildToolsVersion '27.0.3' //必须设置,build tools的版本
    defaultConfig { //默认配置，所有flavors共享
        applicationId "com.example.administrator.shadowapplication"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        flavorDimensions "versionCode" //指定flavor尺寸的名称
    }
    buildTypes { //项目类型(debug、release)
        release {
            minifyEnabled true //用来控制是否运行混淆
            shrinkResources true //打开压缩资源
            //返回混淆器要使用的配置文件。有2个默认的规则文件，proguard-android.txt和proguard-android-optimize.txt。
            // 这两个文件位于SDK,使用getDefaultProguardFile(字符串文件名)将返回文件的完整路径,除了启用优化，这两个文件是相同的
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.config
        }
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.config
        }
    }
    lintOptions {
        disable 'ResourceType' // 忽略自定义id
        disable 'MissingTranslation' // 忽略未翻译的字符串
        abortOnError false
    }
//productFlavors打包渠道就在这儿配置咯 同时在AndroidManifest里面加上，渠道标识,因为我们没有加统计，所以我们不用设置多渠道标识
    //所谓多渠道打包，就是构成不同的apk名字，发布的不同的平台上，根据此名称可以做出相应的统计操作
    /* productFlavors {
         Xiaomi {}
     }
 */
    dataBinding {
        enabled = true
    }

    kapt {
        generateStubs = true
    }

    /* applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                def fileName = outputFile.name.replace(".apk", "_${defaultConfig.versionName}_prod.apk")
                def fileName = "shadow_${defaultConfig.versionName}_${variant.buildType.name}.apk"
                //自己拼接apk的名字
                output.outputFile = new File();
                //= new File(outputFile.parent, fileName.toLowerCase())
            }
        }
    }
*/
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                def fileName = outputFile.name.replace(".apk", "_${defaultConfig.versionName}_prod.apk")
                def fileName = "shadow_${defaultConfig.versionName}_${variant.buildType.name}.apk"
                output.outputFileName = fileName.toLowerCase()
            }
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    supportVersion = "27.0.2"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:support-vector-drawable:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:support-vector-drawable:$supportVersion"
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    compile 'com.github.bumptech.glide:glide:4.3.0'
    compile 'jp.wasabeef:glide-transformations:3.0.1'
    compile 'com.google.code.gson:gson:2.8.1'
    //dagger
    compile 'com.google.dagger:dagger:2.11'
    compile 'com.google.dagger:dagger-android:2.11'
    compile 'com.google.dagger:dagger-android-support:2.11'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.0'
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/httpmime-4.1.2.jar')
    //http
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup:android-times-square:1.6.5@aar'
    compile project(':javalib')
    //eventBus
    compile 'org.greenrobot:eventbus:3.1.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    compile 'io.reactivex:rxjava:1.3.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    //butter knife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.anko:anko:0.10.4"
    compile 'com.google.zxing:core:3.3.0'
    compile 'com.prolificinteractive:material-calendarview:1.4.3'


}

